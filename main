local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local RS = game:GetService("ReplicatedStorage")
local UIS = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local Root = Character:WaitForChild("HumanoidRootPart")

local Packets = require(RS.Modules.Packets)
local GameUtil = require(RS.Modules.GameUtil)
local ItemIDS = require(RS.Modules.ItemIDS)
local ItemData = require(RS.Modules.ItemData)

-- Load config
local success, config = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/Zacharificy/goldfarm/main/tweens"))()
end)

local DEFAULT_CONFIG = success and config or {waitTime = 1, heightOffset = 0, moveSpeed = 20, positions = {}}
if success then
    print("✅ tween config loaded! (" .. #config.positions .. " positions)")
else
    warn("❌ config load failed")
end

-- State management
local state = {
    autoHit = false,
    noclip = false,
    autoEat = false,
    tween = false,
    pickupGold = false,
    pickupCoal = false,
    antiAFK = false,
    coinPress = false,
    campfireFuel = false,
    tpRawGoldToChest = false,
    pickupGoldFromChest = false,
    pickupCoins = false
}

local settings = {
    hitRadius = 100,
    fruit = "Lemon",
    tweenSpeed = 18.6,
    waitTime = DEFAULT_CONFIG.waitTime or 0.1,
    positions = DEFAULT_CONFIG.positions or {},
    currentTab = "main"
}

local connections = {}
local tasks = {}
local chest = nil
local HUNGER_CAP = 100
local EAT_AT_OR_BELOW = 90
local LOOP_WAIT_SECONDS = 1
local POST_EAT_COOLDOWN = 2.0
local lastEatTime = 0

-- Anti-AFK Setup
local function setupAntiAFK()
    local GC = getconnections or get_signal_cons
    if GC then
        for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
            if v["Disable"] then
                v["Disable"](v)
            elseif v["Disconnect"] then
                v["Disconnect"](v)
            end
        end
        print("✅ anti-afk: connections disabled")
    else
        local VirtualUser = game:GetService("VirtualUser")
        Players.LocalPlayer.Idled:Connect(function()
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end)
        print("✅ anti-afk: virtual user enabled")
    end
end

-- Get fruit options
local fruitOptions = {}
for name, data in pairs(ItemData) do
    if data.grows then
        table.insert(fruitOptions, name)
    end
end
table.sort(fruitOptions)
if #fruitOptions == 0 then
    fruitOptions = {"Bloodfruit", "Strawberry", "Berries", "Cloudberry", "Prickly Pear", "Lemon"}
end

-- Character updates
LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
    Humanoid = char:WaitForChild("Humanoid")
    Root = char:WaitForChild("HumanoidRootPart")
end)

-- Hit resources
local hitDebounce = false
local function hitResources()
    if not state.autoHit or hitDebounce then return end
    hitDebounce = true
    
    local entities = {}
    for _, res in ipairs(Workspace.Resources:GetChildren()) do
        if (Root.Position - res:GetPivot().Position).Magnitude <= settings.hitRadius then
            local id = res:GetAttribute("EntityID")
            if id then table.insert(entities, id) end
        end
    end
    if #entities > 0 then
        Packets.SwingTool.send(entities)
    end
    
    task.delay(0.1, function() hitDebounce = false end)
end

-- Noclip
local function noclip()
    for _, v in workspace.Deployables:GetChildren() do
        local door = v:FindFirstChild("Door")
        if door then
            door.Transparency = state.noclip and 0.5 or 0
            door.CanCollide = not state.noclip
        end
    end
    
    if state.noclip and not state.tween then
        for _, v in workspace.Resources:GetChildren() do
            if v.Name == "Old Boards" then
                v:Destroy()
            end
        end
    end
    
    if state.noclip and Character then
        for _, part in ipairs(Character:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                part.CanCollide = false
            end
        end
    end
end

-- Helper functions
local function findFruit(name)
    for idx, data in next, GameUtil.getData().inventory do
        if data.name == name then return idx end
    end
end

local function getRestore(name)
    local id = ItemIDS[name] or name
    local data = ItemData[id] or (ItemIDS[id] and ItemData[ItemIDS[id]])
    return data and (data.food or data.hunger or data.restore or data.restoreValue or data.heal)
end

local function getHunger()
    local stats = GameUtil and GameUtil.Data and GameUtil.Data.stats
    return stats and stats.food
end

local function canEatNow()
    return (tick() - lastEatTime) >= POST_EAT_COOLDOWN
end

local function willOvereat(currentHunger, restore)
    if not restore then return false end
    return (currentHunger + restore) > HUNGER_CAP
end

-- Auto eat
local function autoEat()
    while state.autoEat do
        local hunger = getHunger()
        local health = Character and Character:FindFirstChild("Humanoid") and Character.Humanoid.Health or 100
        
        if not settings.fruit then
            warn("no fruit selected for auto-eat.")
        elseif not hunger then
            warn("hunger value unavailable.")
        else
            if (hunger <= EAT_AT_OR_BELOW or health <= 90) and canEatNow() then
                local idx = findFruit(settings.fruit)
                if idx then
                    local restore = getRestore(settings.fruit)
                    if not (restore and willOvereat(hunger, restore) and health > 90) then
                        Packets.UseBagItem.send(idx)
                        lastEatTime = tick()
                    end
                else
                    warn("fruit not found: " .. tostring(settings.fruit))
                end
            end
        end
        
        task.wait(LOOP_WAIT_SECONDS)
    end
end

-- Pickup items
local pickupDebounce = {}
local function pickup(itemName)
    local enabled = itemName == "Raw Gold" and state.pickupGold or state.pickupCoal
    while enabled do
        enabled = itemName == "Raw Gold" and state.pickupGold or state.pickupCoal
        local items = Workspace:FindFirstChild("Items")
        if items then
            for _, item in ipairs(items:GetChildren()) do
                if item.Name == itemName and not pickupDebounce[item] then
                    pickupDebounce[item] = true
                    local id = item:GetAttribute("EntityID")
                    local t = os.clock()
                    while not id and item.Parent == items and os.clock() - t < 1.5 do
                        task.wait()
                        id = item:GetAttribute("EntityID")
                    end
                    if id then
                        for i = 1, 12 do
                            if not item or item.Parent ~= items then break end
                            Packets.Pickup.send(id)
                            task.wait(0.03)
                        end
                    end
                    task.delay(1, function() pickupDebounce[item] = nil end)
                end
            end
        end
        task.wait(0.05)
    end
end

local function getDeployable(name, range)
    local deployablesFolder = Workspace:FindFirstChild("Deployables")
    if not deployablesFolder or not Root then return nil end
    
    range = tonumber(range) or math.huge
    local closest, closestDist = nil, range
    
    for _, v in ipairs(deployablesFolder:GetChildren()) do
        if v.Name == name and v:IsA("Model") then
            local ok, pivot = pcall(function() return v:GetPivot() end)
            if ok and pivot then
                local dist = (Root.Position - pivot.Position).Magnitude
                if dist < closestDist then
                    closest, closestDist = v, dist
                end
            end
        end
    end
    return closest
end

local function getQuantity(name)
    for x, v in next, GameUtil.getData().inventory do
        if v.name == name then
            return v.quantity, x
        end
    end
    return 0
end

-- Coin press
local SEND_DT = 0.01
local LOOKUP_DT = 1
local BURST_MAX = 10

local function pressCoins()
    local press, entityID, lastLookup, lastSend = nil, nil, 0, 0

    while state.coinPress do
        local now = os.clock()

        if (not press or not press.Parent or (now - lastLookup) >= LOOKUP_DT) then
            press = getDeployable("Coin Press", 25)
            entityID = (press and press:GetAttribute("EntityID")) or nil
            lastLookup = now
        end

        if entityID then
            local goldAmt = getQuantity("Gold") or 0
            if goldAmt > 0 and (now - lastSend) >= SEND_DT then
                local n = math.min(goldAmt, BURST_MAX)
                for i = 1, n do
                    Packets.InteractStructure.send({ entityID = entityID, itemID = ItemIDS.Gold })
                end
                lastSend = now
            end
        end

        task.wait(0.01)
    end
end

-- Improved Campfire refuel (from immortal.tech)
local function campfireRefuelLoop()
    while state.campfireFuel do
        local deployablesFolder = Workspace:FindFirstChild("Deployables")
        
        if deployablesFolder and Root then
            for _, structure in ipairs(deployablesFolder:GetChildren()) do
                local dist = (structure:GetPivot().Position - Root.Position).Magnitude
                
                if structure.Name == "Campfire" and structure:GetAttribute("EntityID") and dist <= 40 then
                    local board = structure:FindFirstChild("Board")
                    local billboard = board and board:FindFirstChild("Billboard")
                    local backdrop = billboard and billboard:FindFirstChild("Backdrop")
                    local textLabel = backdrop and backdrop:FindFirstChild("TextLabel")
                    
                    if textLabel then
                        local fireValue = tonumber(textLabel.Text) or 999
                        
                        if fireValue <= 200 then
                            local amount = 0
                            local tempFire = fireValue
                            
                            -- Calculate how many logs needed
                            for i = 1, 10 do
                                if tempFire >= 250 then break end
                                tempFire = tempFire + 50
                                amount = amount + 1
                            end
                            
                            -- Add the logs
                            for i = 1, amount do
                                Packets.InteractStructure.send({
                                    entityID = structure:GetAttribute("EntityID"),
                                    itemID = ItemIDS.Log
                                })
                                task.wait(0.05)
                            end
                        end
                    end
                end
            end
        end
        task.wait(0.25)
    end
end

-- Improved TP Raw Gold to Chest (from immortal.tech)
local function tpRawGoldLoop()
    while state.tpRawGoldToChest do
        task.wait(0.1)
        
        if not chest or not chest.Parent then
            chest = getDeployable("Chest", 100)
            if not chest then
                warn("no chest found nearby")
                task.wait(1)
                continue
            end
        end
        
        local items = Workspace:FindFirstChild("Items")
        if items then
            for _, item in ipairs(items:GetChildren()) do
                if item.Name == "Raw Gold" and item.Parent == items then
                    local id = item:GetAttribute("EntityID")
                    
                    -- Wait a bit for EntityID if not available
                    if not id then
                        local t0 = os.clock()
                        while not id and item.Parent == items and os.clock() - t0 < 1 do
                            task.wait(0.1)
                            id = item:GetAttribute("EntityID")
                        end
                    end
                    
                    if id then
                        -- Use ForceInteract to gain network ownership
                        Packets.ForceInteract.send(id)
                        task.wait(0.05)
                        
                        -- Teleport directly to chest
                        local success = pcall(function()
                            if item and item.Parent == items and chest and chest.Parent then
                                item:PivotTo(chest:GetPivot() * CFrame.new(0, 2, 0))
                            end
                        end)
                        
                        task.wait(0.05)
                        
                        -- Release network ownership
                        Packets.ForceInteract.send()
                        
                        if not success then
                            warn("failed to teleport raw gold")
                        end
                    end
                end
            end
        end
    end
end

-- NEW: Pickup gold from chest
local function pickupGoldFromChestLoop()
    while state.pickupGoldFromChest do
        if not chest or not chest.Parent then
            chest = getDeployable("Chest", 100)
            if not chest then
                warn("no chest found nearby for pickup")
                task.wait(1)
                continue
            end
        end
        
        local contents = chest:FindFirstChild("Contents")
        if contents then
            for _, item in ipairs(contents:GetChildren()) do
                if item.Name == "Gold" or item.Name == "Raw Gold" then
                    local id = item:GetAttribute("EntityID")
                    if id then
                        for i = 1, 8 do
                            if not item or item.Parent ~= contents then break end
                            Packets.Pickup.send(id)
                            task.wait(0.05)
                        end
                    end
                end
            end
        end
        task.wait(0.25)
    end
end

-- Tween path (optimized)
local function tweenPath()
    if #settings.positions == 0 then
        warn("no positions loaded!")
        state.tween = false
        return
    end

    local function nearestIndex(fromPos)
        local bestI, bestD = 1, math.huge
        for j = 1, #settings.positions do
            local p = settings.positions[j]
            if p and p.X and p.Y and p.Z then
                local d = (fromPos - Vector3.new(p.X, p.Y, p.Z)).Magnitude
                if d < bestD then bestI, bestD = j, d end
            end
        end
        return bestI
    end

    local curIndex = nearestIndex(Root.Position)
    local REACH_RADIUS = 4
    local MIN_IMPROVE_STUDS = 0.75
    local NO_PROGRESS_SECS = 2.5

    while state.tween do
        if not Root or not Root.Parent or not Humanoid or not Humanoid.Parent then
            task.wait(1)
            continue
        end

        local pos = settings.positions[curIndex]
        if not (pos and pos.X and pos.Y and pos.Z) then
            curIndex = (curIndex % #settings.positions) + 1
            task.wait(0.05)
            continue
        end

        local targetPos = Vector3.new(pos.X, pos.Y, pos.Z)
        local startPos = Root.Position
        local dist = (startPos - targetPos).Magnitude
        local speed = settings.tweenSpeed
        local duration = math.max(0.02, dist / speed)

        if connections.tweenConn then
            connections.tweenConn:Disconnect()
            connections.tweenConn = nil
        end
        if connections.tween then
            connections.tween:Cancel()
            connections.tween = nil
        end

        local ti = TweenInfo.new(duration, Enum.EasingStyle.Linear)
        connections.tween = TweenService:Create(Root, ti, {CFrame = CFrame.new(targetPos)})

        local completed = false
        local t0 = tick()
        local lastPoll = t0
        local lastDist = (Root.Position - targetPos).Magnitude

        connections.tweenConn = connections.tween.Completed:Connect(function()
            completed = true
            if connections.tweenConn then
                connections.tweenConn:Disconnect()
                connections.tweenConn = nil
            end
        end)

        connections.tween:Play()

        while state.tween and not completed do
            task.wait(0.2)
            
            local curDist = (Root.Position - targetPos).Magnitude
            if curDist <= REACH_RADIUS then
                completed = true
                break
            end

            if (tick() - lastPoll) > NO_PROGRESS_SECS and (lastDist - curDist) < MIN_IMPROVE_STUDS then
                break
            end

            lastPoll = tick()
            lastDist = curDist
        end

        if connections.tweenConn then
            connections.tweenConn:Disconnect()
            connections.tweenConn = nil
        end
        if connections.tween then
            connections.tween:Cancel()
            connections.tween = nil
        end

        curIndex = (curIndex % #settings.positions) + 1
        task.wait(settings.waitTime or 0.1)
    end

    Root.Anchored = false
end

-- All function definitions must be complete before creating UI

-- GUI Creation (optimized and more appealing)
local gui = Instance.new("ScreenGui")
gui.Name = "TweenHub"
gui.ResetOnSpawn = false
gui.Parent = game.CoreGui

local main = Instance.new("Frame")
main.Size = UDim2.new(0, 420, 0, 520)
main.Position = UDim2.new(0.5, -210, 0.5, -260)
main.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
main.BorderSizePixel = 0
main.Parent = gui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 16)
corner.Parent = main

-- Add shadow effect
local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.Size = UDim2.new(1, 30, 1, 30)
shadow.Position = UDim2.new(0, -15, 0, -15)
shadow.BackgroundTransparency = 1
shadow.Image = "rbxasset://textures/ui/InspectMenu/Shadow.png"
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.ImageTransparency = 0.5
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.ZIndex = 0
shadow.Parent = main

local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 55)
header.BackgroundColor3 = Color3.fromRGB(30, 144, 255)
header.BorderSizePixel = 0
header.Parent = main

local hCorner = Instance.new("UICorner")
hCorner.CornerRadius = UDim.new(0, 16)
hCorner.Parent = header

local hFix = Instance.new("Frame")
hFix.Size = UDim2.new(1, 0, 0, 16)
hFix.Position = UDim2.new(0, 0, 1, -16)
hFix.BackgroundColor3 = Color3.fromRGB(30, 144, 255)
hFix.BorderSizePixel = 0
hFix.Parent = header

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -60, 1, 0)
title.Position = UDim2.new(0, 15, 0, 0)
title.BackgroundTransparency = 1
title.Text = "⚡ Tween Hub"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 26
title.Font = Enum.Font.GothamBold
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = header

local close = Instance.new("TextButton")
close.Size = UDim2.new(0, 35, 0, 35)
close.Position = UDim2.new(1, -45, 0, 10)
close.BackgroundColor3 = Color3.fromRGB(255, 59, 59)
close.Text = "×"
close.TextColor3 = Color3.fromRGB(255, 255, 255)
close.TextSize = 24
close.Font = Enum.Font.GothamBold
close.Parent = header

local cCorner = Instance.new("UICorner")
cCorner.CornerRadius = UDim.new(0, 8)
cCorner.Parent = close

close.MouseEnter:Connect(function()
    TweenService:Create(close, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(255, 80, 80)}):Play()
end)

close.MouseLeave:Connect(function()
    TweenService:Create(close, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(255, 59, 59)}):Play()
end)

close.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- Tab system
local tabContainer = Instance.new("Frame")
tabContainer.Size = UDim2.new(1, -20, 0, 45)
tabContainer.Position = UDim2.new(0, 10, 0, 65)
tabContainer.BackgroundTransparency = 1
tabContainer.Parent = main

local tabLayout = Instance.new("UIListLayout")
tabLayout.FillDirection = Enum.FillDirection.Horizontal
tabLayout.Padding = UDim.new(0, 8)
tabLayout.Parent = tabContainer

local scroll = Instance.new("ScrollingFrame")
scroll.Size = UDim2.new(1, -20, 1, -130)
scroll.Position = UDim2.new(0, 10, 0, 120)
scroll.BackgroundTransparency = 1
scroll.BorderSizePixel = 0
scroll.ScrollBarThickness = 4
scroll.ScrollBarImageColor3 = Color3.fromRGB(30, 144, 255)
scroll.Parent = main

local mainContent = Instance.new("Frame")
mainContent.Size = UDim2.new(1, 0, 1, 0)
mainContent.BackgroundTransparency = 1
mainContent.Visible = true
mainContent.Parent = scroll

local extraContent = Instance.new("Frame")
extraContent.Size = UDim2.new(1, 0, 1, 0)
extraContent.BackgroundTransparency = 1
extraContent.Visible = false
extraContent.Parent = scroll

local mainLayout = Instance.new("UIListLayout")
mainLayout.Padding = UDim.new(0, 12)
mainLayout.Parent = mainContent

local extraLayout = Instance.new("UIListLayout")
extraLayout.Padding = UDim.new(0, 12)
extraLayout.Parent = extraContent

-- Tab creation function
local function createTab(name, icon)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 130, 1, 0)
    btn.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    btn.Text = icon .. " " .. name
    btn.TextColor3 = Color3.fromRGB(200, 200, 200)
    btn.TextSize = 15
    btn.Font = Enum.Font.GothamSemibold
    btn.Parent = tabContainer
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 8)
    btnCorner.Parent = btn
    
    btn.MouseEnter:Connect(function()
        if not btn:FindFirstChild("Active") then
            TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(45, 45, 50)}):Play()
        end
    end)
    
    btn.MouseLeave:Connect(function()
        if not btn:FindFirstChild("Active") then
            TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(35, 35, 40)}):Play()
        end
    end)
    
    btn.MouseButton1Click:Connect(function()
        mainContent.Visible = false
        extraContent.Visible = false
        
        for _, child in ipairs(tabContainer:GetChildren()) do
            if child:IsA("TextButton") then
                if child:FindFirstChild("Active") then
                    child.Active:Destroy()
                end
                TweenService:Create(child, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(35, 35, 40),
                    TextColor3 = Color3.fromRGB(200, 200, 200)
                }):Play()
            end
        end
        
        if name == "main" then
            mainContent.Visible = true
        elseif name == "extra" then
            extraContent.Visible = true
        end
        
        local active = Instance.new("BoolValue")
        active.Name = "Active"
        active.Parent = btn
        
        TweenService:Create(btn, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(30, 144, 255),
            TextColor3 = Color3.fromRGB(255, 255, 255)
        }):Play()
        
        settings.currentTab = name
    end)
    
    return btn
end

createTab("main", "🏠")
createTab("extra", "⚙️")

-- UI element creation functions
local function toggle(name, icon, callback, parent)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 65)
    frame.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    frame.BorderSizePixel = 0
    frame.Parent = parent or mainContent
    
    local fCorner = Instance.new("UICorner")
    fCorner.CornerRadius = UDim.new(0, 10)
    fCorner.Parent = frame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.65, 0, 1, 0)
    label.Position = UDim2.new(0, 12, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = icon .. " " .. name
    label.TextColor3 = Color3.fromRGB(230, 230, 230)
    label.TextSize = 15
    label.Font = Enum.Font.GothamSemibold
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextWrapped = true
    label.Parent = frame
    
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 55, 0, 28)
    btn.Position = UDim2.new(1, -65, 0.5, -14)
    btn.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
    btn.Text = "OFF"
    btn.TextColor3 = Color3.fromRGB(200, 200, 200)
    btn.TextSize = 13
    btn.Font = Enum.Font.GothamBold
    btn.Parent = frame
    
    local bCorner = Instance.new("UICorner")
    bCorner.CornerRadius = UDim.new(0, 7)
    bCorner.Parent = btn
    
    local on = false
    btn.MouseButton1Click:Connect(function()
        on = not on
        btn.Text = on and "ON" or "OFF"
        
        TweenService:Create(btn, TweenInfo.new(0.2), {
            BackgroundColor3 = on and Color3.fromRGB(0, 200, 100) or Color3.fromRGB(60, 60, 65),
            TextColor3 = Color3.fromRGB(255, 255, 255)
        }):Play()
        
        callback(on)
    end)
end

local function slider(name, min, max, def, callback, parent)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 85)
    frame.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    frame.BorderSizePixel = 0
    frame.Parent = parent or mainContent
    
    local fCorner = Instance.new("UICorner")
    fCorner.CornerRadius = UDim.new(0, 10)
    fCorner.Parent = frame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -20, 0, 28)
    label.Position = UDim2.new(0, 12, 0, 8)
    label.BackgroundTransparency = 1
    label.Text = name .. ": " .. def
    label.TextColor3 = Color3.fromRGB(230, 230, 230)
    label.TextSize = 14
    label.Font = Enum.Font.GothamSemibold
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    local bar = Instance.new("Frame")
    bar.Size = UDim2.new(1, -24, 0, 10)
    bar.Position = UDim2.new(0, 12, 0, 45)
    bar.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
    bar.BorderSizePixel = 0
    bar.Parent = frame
    
    local bCorner = Instance.new("UICorner")
    bCorner.CornerRadius = UDim.new(1, 0)
    bCorner.Parent = bar
    
    local fill = Instance.new("Frame")
    fill.Size = UDim2.new((def - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = Color3.fromRGB(30, 144, 255)
    fill.BorderSizePixel = 0
    fill.Parent = bar
    
    local fCorner2 = Instance.new("UICorner")
    fCorner2.CornerRadius = UDim.new(1, 0)
    fCorner2.Parent = fill
    
    local drag = Instance.new("TextButton")
    drag.Size = UDim2.new(0, 24, 0, 24)
    drag.Position = UDim2.new((def - min) / (max - min), -12, 0.5, -12)
    drag.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    drag.Text = ""
    drag.Parent = bar
    
    local dCorner = Instance.new("UICorner")
    dCorner.CornerRadius = UDim.new(1, 0)
    dCorner.Parent = drag
    
    local dragging = false
    local val = def
    
    drag.MouseButton1Down:Connect(function()
        dragging = true
    end)
    
    UIS.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    RunService.RenderStepped:Connect(function()
        if dragging then
            local mouse = LocalPlayer:GetMouse()
            local x = math.clamp(mouse.X - bar.AbsolutePosition.X, 0, bar.AbsoluteSize.X)
            local pct = x / bar.AbsoluteSize.X
            val = math.floor(min + (max - min) * pct)
            
            fill.Size = UDim2.new(pct, 0, 1, 0)
            drag.Position = UDim2.new(pct, -12, 0.5, -12)
            label.Text = name .. ": " .. val
            
            callback(val)
        end
    end)
end

local function dropdown(name, opts, def, callback, parent)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 65)
    frame.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    frame.BorderSizePixel = 0
    frame.Parent = parent or mainContent
    
    local fCorner = Instance.new("UICorner")
    fCorner.CornerRadius = UDim.new(0, 10)
    fCorner.Parent = frame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -20, 0, 22)
    label.Position = UDim2.new(0, 12, 0, 6)
    label.BackgroundTransparency = 1
    label.Text = name
    label.TextColor3 = Color3.fromRGB(230, 230, 230)
    label.TextSize = 14
    label.Font = Enum.Font.GothamSemibold
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -24, 0, 28)
    btn.Position = UDim2.new(0, 12, 0, 32)
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
    btn.Text = def
    btn.TextColor3 = Color3.fromRGB(230, 230, 230)
    btn.TextSize = 13
    btn.Font = Enum.Font.Gotham
    btn.Parent = frame
    
    local bCorner = Instance.new("UICorner")
    bCorner.CornerRadius = UDim.new(0, 7)
    bCorner.Parent = btn
    
    local list = Instance.new("ScrollingFrame")
    list.Size = UDim2.new(1, -24, 0, 0)
    list.Position = UDim2.new(0, 12, 0, 65)
    list.BackgroundColor3 = Color3.fromRGB(45, 45, 50)
    list.BorderSizePixel = 0
    list.Visible = false
    list.ZIndex = 10
    list.ScrollBarThickness = 4
    list.ScrollBarImageColor3 = Color3.fromRGB(30, 144, 255)
    list.CanvasSize = UDim2.new(0, 0, 0, #opts * 32)
    list.Parent = frame
    
    local lCorner = Instance.new("UICorner")
    lCorner.CornerRadius = UDim.new(0, 7)
    lCorner.Parent = list
    
    local lLayout = Instance.new("UIListLayout")
    lLayout.Padding = UDim.new(0, 2)
    lLayout.Parent = list
    
    btn.MouseButton1Click:Connect(function()
        list.Visible = not list.Visible
        if list.Visible then
            local h = math.min(#opts * 32, 160)
            frame.Size = UDim2.new(1, 0, 0, 65 + h)
            list.Size = UDim2.new(1, -24, 0, h)
        else
            frame.Size = UDim2.new(1, 0, 0, 65)
        end
    end)
    
    for _, opt in ipairs(opts) do
        local obtn = Instance.new("TextButton")
        obtn.Size = UDim2.new(1, 0, 0, 30)
        obtn.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
        obtn.Text = opt
        obtn.TextColor3 = Color3.fromRGB(230, 230, 230)
        obtn.TextSize = 13
        obtn.Font = Enum.Font.Gotham
        obtn.BorderSizePixel = 0
        obtn.Parent = list
        
        obtn.MouseEnter:Connect(function()
            TweenService:Create(obtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(30, 144, 255)}):Play()
        end)
        
        obtn.MouseLeave:Connect(function()
            TweenService:Create(obtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(50, 50, 55)}):Play()
        end)
        
        obtn.MouseButton1Click:Connect(function()
            btn.Text = opt
            list.Visible = false
            frame.Size = UDim2.new(1, 0, 0, 65)
            callback(opt)
        end)
    end
end

-- Add main tab controls
toggle("anti-afk", "⏰", function(on)
    state.antiAFK = on
    if on then
        setupAntiAFK()
        print("✅ anti-afk enabled")
    end
end)

toggle("auto hit resources", "🔨", function(on)
    state.autoHit = on
    if on then
        connections.autoHit = RunService.Heartbeat:Connect(hitResources)
    else
        if connections.autoHit then
            connections.autoHit:Disconnect()
        end
    end
end)

slider("hit radius", 10, 200, settings.hitRadius, function(v)
    settings.hitRadius = v
end)

toggle("noclip (doors & boards)", "👻", function(on)
    state.noclip = on
    noclip()
    if on then
        connections.noclip = RunService.Heartbeat:Connect(noclip)
    else
        if connections.noclip then
            connections.noclip:Disconnect()
        end
        noclip()
    end
end)

dropdown("select fruit", fruitOptions, settings.fruit, function(fruit)
    settings.fruit = fruit
end)

toggle("auto eat/heal", "🍎", function(on)
    state.autoEat = on
    if on then
        tasks.autoEat = task.spawn(autoEat)
    else
        if tasks.autoEat then
            task.cancel(tasks.autoEat)
        end
    end
end)

toggle("position tween", "🧭", function(on)
    state.tween = on
    if on then
        task.spawn(tweenPath)
    else
        if connections.tween then
            connections.tween:Cancel()
        end
    end
end)

slider("wait time (seconds)", 0, 10, settings.waitTime, function(v)
    settings.waitTime = v
end)

toggle("pickup raw gold", "💰", function(on)
    state.pickupGold = on
    if on then
        tasks.pickupGold = task.spawn(function() pickup("Raw Gold") end)
    else
        if tasks.pickupGold then
            task.cancel(tasks.pickupGold)
        end
    end
end)

toggle("pickup coal", "⚫", function(on)
    state.pickupCoal = on
    if on then
        tasks.pickupCoal = task.spawn(function() pickup("Coal") end)
    else
        if tasks.pickupCoal then
            task.cancel(tasks.pickupCoal)
        end
    end
end)

-- Extra tab controls
toggle("auto coin press", "🪙", function(on)
    state.coinPress = on
    if on then
        tasks.coinPress = task.spawn(pressCoins)
    else
        if tasks.coinPress then
            task.cancel(tasks.coinPress)
        end
    end
end, extraContent)

toggle("auto fuel campfire", "🔥", function(on)
    state.campfireFuel = on
    if on then
        tasks.campfireFuel = task.spawn(campfireRefuelLoop)
    else
        if tasks.campfireFuel then
            task.cancel(tasks.campfireFuel)
        end
    end
end, extraContent)

toggle("tp raw gold to chest", "📦", function(on)
    state.tpRawGoldToChest = on
    if on then
        chest = getDeployable("Chest", 100)
        if not chest then
            warn("⚠️ no chest found within 100 studs - stand near a chest!")
            state.tpRawGoldToChest = false
            return
        end
        print("✅ tp raw gold enabled - chest found!")
        -- Start the loop directly
        task.spawn(function()
            tpRawGoldLoop()
        end)
    end
end, extraContent)

toggle("pickup gold from chest", "💎", function(on)
    state.pickupGoldFromChest = on
    if on then
        chest = getDeployable("Chest", 100)
        if not chest then
            warn("no chest found within 100 studs")
            state.pickupGoldFromChest = false
        else
            tasks.pickupGoldFromChest = task.spawn(pickupGoldFromChestLoop)
        end
    else
        if tasks.pickupGoldFromChest then
            task.cancel(tasks.pickupGoldFromChest)
        end
    end
end, extraContent)

toggle("pickup coins (from press)", "🪙", function(on)
    state.pickupCoins = on
    if on then
        tasks.pickupCoins = task.spawn(pickupCoinsLoop)
    else
        if tasks.pickupCoins then
            task.cancel(tasks.pickupCoins)
        end
    end
end, extraContent)

-- Info panel
local info = Instance.new("Frame")
info.Size = UDim2.new(1, 0, 0, 65)
info.BackgroundColor3 = Color3.fromRGB(30, 144, 255)
info.BackgroundTransparency = 0.1
info.BorderSizePixel = 0
info.Parent = mainContent

local iCorner = Instance.new("UICorner")
iCorner.CornerRadius = UDim.new(0, 10)
iCorner.Parent = info

local iLabel = Instance.new("TextLabel")
iLabel.Size = UDim2.new(1, -24, 1, -20)
iLabel.Position = UDim2.new(0, 12, 0, 10)
iLabel.BackgroundTransparency = 1
iLabel.Text = "ℹ️ Loaded " .. #settings.positions .. " positions\n✨ Enjoy using Tween Hub!"
iLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
iLabel.TextSize = 13
iLabel.Font = Enum.Font.GothamSemibold
iLabel.TextWrapped = true
iLabel.TextYAlignment = Enum.TextYAlignment.Top
iLabel.Parent = info

-- Dragging functionality
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    TweenService:Create(main, TweenInfo.new(0.1), {
        Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    }):Play()
end

header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = main.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

header.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

print("✨ Tween Hub loaded successfully!")
